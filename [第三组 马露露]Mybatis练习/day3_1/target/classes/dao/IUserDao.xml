<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.IUserDao">

    <!-- 配置查询所有操作 -->
    <select id="findAll" resultMap="userMap">
        select * from user
    </select>

    <!--根据Id查询 -->
    <select id="findById" resultMap="userMap">
        select * from user where id = #{uuuid}
    </select>

    <!--保存用户-->
    <insert id="saveUser"
            parameterType="domain.User"
            useGeneratedKeys="true" keyProperty="userId">
        insert into user(username, birthday, sex, address)
        values(#{userName}, #{userBirthday}, #{userSex}, #{userAddress})
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="domain.User">
        update user set username=#{userName}, birthday=#{userBirthday},
        sex=#{userSex}, address=#{userAddress} where id=#{userId}
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="int">
        delete from user where id = #{uid}
    </delete>

    <!--根据名称模糊查询-->
    <select id="findByName" resultMap="userMap" parameterType="String">
        select * from user where username like #{userName}
    </select>

    <!--根据名称模糊查询New-->
    <select id="findByNameNew" resultMap="userMap" parameterType="String">
        select * from user where username like '%${userName}%'
    </select>

    <!--查询总记录条数-->
    <select id="count" resultType="int">
        select count(*) from user;
    </select>

    <!--根据用户名称和地址模糊查询，输入参数编程一个QueryVo对象-->
    <select id="fingByVo" resultMap="userMap" parameterType="domain.QueryVo">
        select * from user where username like #{name} and address like #{address}
    </select>

    <select id="findInIds" resultMap="userMap" parameterType="domain.QueryVolds">
        select * from user
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>


    <resultMap id="userMap" type="domain.User">
        <id column="id" property="userId"/>
        <result column="username" property="userName" />
        <result column="sex" property="userSex" />
        <result column="address" property="userAddress"/>
        <result column="birthday" property="userBirthday" />
    </resultMap>

</mapper>